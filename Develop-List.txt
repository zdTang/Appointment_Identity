# 5. Add Connection String in AppSettings
  Create a connection string
  Could put the connection string into the "SECRET" as well
  Also can put it into the "appSettings.development.json"


#  6
  first, create dbContext class (AppDbContext) based on "IdentityDbContext" ==  as we want use Identity tables
  second, Register our own dbContext class into Service Collection


	1,  tell the framework we are going to use SQL Server
	2,  tell the framework how to connect the SQL Server, be aware, the "Configuration" is mapping to 5 levels locations.

# 7-1 1. Add Identity Tables
  use PM:  Commands:   Add-migration xxxx,    update-database
  Be aware, if we use "dotnet ef", the command syntax are different

  At this time point, even we have not create any tables, but because Identity has user tables built-in, so that we can do migration and update=database

# 2- 9. Client Side Validations

  To make client side validation work, need several steps:
  1, View Model add validition Attribute
  2, View bind View Model, View use validation Tag helper
  3, View add necessary "ValidationScriptPartial" partial view
  At this time, all validation happens at Client side.  

# 2-10  Partial view
  
  We must understnad those View are rendered in the Server. not in the Browser.
  When server get a Request, based the User property of the Request, the Server will generate different _layout view.
  As the Web server catch the request, it will create a HttpDbContext object, it also create a "claimPrinciple" to as the "User" property.
  From the "User" property of the HttpContext, we can know the user's status.


# 2-11. Tag Helper
  Tag helper is better than  Http Helper

# 2-13. Register Post Action Method 
  After we use "ApplicationUser" to replace "IdentityUser"
  We should replace several places as well where we use " IdentityUser" as generic type.
  1, setup.cs     when we register services
  2, _Loginpartial.cshtml   we DI a SignInManager here!

# 15. Sign In Navbar

  In the HttpContext, the "User" property has "IsAuthenticate" property.
  If it is new user, then this value is "false"
  After await _signInManager.SignInAsync(user, isPersistent: false)
  When the request come back another time, this value truns to True !
  And the signInManager.IsSignedIn(User) turns to True !

# 16. SignIn SignUp Errors and Logoff

   For Server-side Error, such as user's name and password cannot find in the Database, or SignIn User is not successful due to the database glitch. 
   We can use "ModelState.AddModelError(string.Empty, "Invalid login attempt !");" to add Error to the ModelState Object
   This error will display to the Summary Validation Slot : <div asp-validation-summary="All" class="text-danger"></div>
   We must have this Slot for display Error on the ModelState Object. Or it doesn't display !

# 3-4. Appointment Service Get Doctors Part 2

  Add Service Layer to access Entity.
  Dependency Inject the Service
  Find an Error: didn't use _signInManager to sign in user's role !
  Use Linq to query users who is Doctor, is there more efficient approach to do it?

# 3-5. Display Doctor DropDown
  Pay attention to Html helper's syntax.
  Using ViewBag to pass data to View

# 3-7. Show modal on calendar selection
  How Bootstrap modal works?    need read menu carefully
  Canlendar has a "select" event, which can trigger function.
  In this function, we display the modal to Cover the underlying message.
  
